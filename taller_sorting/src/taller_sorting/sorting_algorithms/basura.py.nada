from taller_sorting.list_algorithms import presentar
grupo= 'Catedra Duplicado'

@presentar
def merge_sort(lista):
    if len(lista) <= 1:
        return lista
    else:
        m1= merge_sort(lista[:len(lista)/2])
        m2= merge_sort(lista[len(lista)/2:])

        i1= i2= 0
        i= 0
        while i1 < len(m1) and i2 < len(m2):
            if m1[i1] < m2[i2]:
                lista[i]= m1[i1]
                i1+=1
            else:
                lista[i]= m2[i2]
                i2+=1
            i+=1
        
        
        index= m= None
        if i1 < len(m1):
            index= i1
            m= m1
        if i2 < len(m2):
            index= i2
            m= m2
        
        if index is not None:
            for j in xrange(index, len(m)):
                lista[i]= m[j]
                i+=1

        return lista

#@presentar
#def merge_sort(lista):
#    _merge_sort_mejor(lista, range(len(lista)), 0, len(lista))

#def _merge_sort_mejor(lista, tmp, start_index, end_index):
#    if end_index - start_index <= 1:
#        return 
#    else:
#        end_m1= start_index + (end_index - start_index)/2
#        _merge_sort_mejor(lista, tmp, start_index, end_m1)
#        _merge_sort_mejor(lista, tmp, end_m1, end_index)
#        #import ipdb;ipdb.set_trace()

#        i1= start_index
#        i2= end_m1
#        i= start_index
#        e1= lista[i1]
#        e2= lista[i2]
#        while i1 < end_m1 and i2 < end_index:
#            if e1 < e2:
#                tmp[i]= e1
#                i1+=1
#                if i1 < end_m1: e1= lista[i1]
#            else:
#                tmp[i]= e2
#                i2+=1
#                if i2 < end_index: e2= lista[i2]
#            i+=1
#        
#        index= end_m= None
#        if i1 < end_m1:
#            index= i1
#            end_m= end_m1
#        if i2 < end_index:
#            index= i2
#            end_m= end_index
#        
#        if index is not None:
#            for j in xrange(index, end_m):
#                tmp[i]= lista[j]
#                i+=1
#        
#        for i in xrange(start_index, end_index):
#            lista[i]= tmp[i]
#        return 
#           
#           
